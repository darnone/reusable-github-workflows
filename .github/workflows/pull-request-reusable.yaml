name: Terraform and Terragrunt Pull Request Checks Reusable

on:
  workflow_call:
    secrets: 
      github_token:
        required: true
      sr_token:
        required: true

env:
  tf_version: '1.3.2'
  tg_version: '0.38.0'
  tf_working_dir: '.'
jobs:
  terragrunt:
    name: Terragrunt
    runs-on: ubuntu-latest
    if: contains(github.event.repository.name, 'terraform') && github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terragrunt Install
        uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: 'Terragrunt hcl'
        run: terragrunt hclfmt
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    if: contains(github.event.repository.name, 'terraform') && github.actor != 'dependabot[bot]'
    services:
      localstack:
        image: localstack/localstack:1.2
        ports:
          - 4566:4566
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}
      - uses: actions/checkout@v2
      - run: git config --global --replace-all url."https://oauth2:${{ secrets.SR_TOKEN }}@github.com".insteadOf ssh://git@github.com
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      - name: Create Providers for Aliases
        uses: bendrucker/terraform-configuration-aliases-action@v1
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        env:
          AWS_DEFAULT_REGION: us-east-1
      - name: Terraform Test
        id: test
        run: terraform test -no-color
        env:
          AWS_DEFAULT_REGION: us-east-1
      - name: Pull Request Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v1.4.4
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            #### Terraform Format and Style üñå `${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è `${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ
            ```${{ steps.validate.outputs.stdout }}```
